name: PUBLISH
run-name: 🚀 Commit on ${{ github.ref_name }}

on:
  push:
    branches:
      - master

jobs:
  validate:
    name: ↪️ Validate
    uses: ./.github/workflows/validate.yml
  publish:
    name: 📦 Publish
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      actions: write # To cancel the run
      contents: write # To add a new tag and push a new release
      packages: write # To add a new Docker package
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RUN_ID: ${{ github.run_id }}

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.18'
          cache: 'yarn'

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: ❓ Check if a new version needs to be published
        id: publish-check
        # Note: We can't do:
        # echo "SHOULD_PUBLISH=$(yarn publish:check)" >> "$GITHUB_OUTPUT"
        # Because the echo command will always be considered a success, even if
        # the $(yarn publish:check) fails. This is why we need an intermediate
        # variable.
        run: >
          SHOULD_PUBLISH="$(yarn publish:check)"
          && echo "SHOULD_PUBLISH=$SHOULD_PUBLISH" >> "$GITHUB_OUTPUT"

      - name: ⏹️ Cancel run
        if: ${{ steps.publish-check.outputs.SHOULD_PUBLISH == 'no' }}
        run: gh run cancel "$RUN_ID"

      - name: 🆙 Bump version, tag commit, publish GitHub Release
        if: ${{ steps.publish-check.outputs.SHOULD_PUBLISH == 'yes' }}
        run: yarn publish:github

      - name: 🐋 Publish Docker image
        if: ${{ steps.publish-check.outputs.SHOULD_PUBLISH == 'yes' }}
        run: yarn publish:docker
